@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user);
        var role = roles.FirstOrDefault();
        <li class="nav-item">
            <span class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="bi bi-person-badge" style="color: orange;"></i>
                <span style="color: lightgreen !important;">@User.Identity?.Name: </span>
                <span style="color: orange !important;">@role</span>
            </span>
        </li>

    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
